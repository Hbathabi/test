# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QVBoxLayout
from PyQt5 import QtCore, QtGui, QtWidgets
import fileManpulation as FM
import cloumnsManpulation as CM


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setAcceptDrops(True)
        MainWindow.resize(410, 371)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.SelectFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.SelectFileButton.setGeometry(QtCore.QRect(0, 0, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.SelectFileButton.setFont(font)
        self.SelectFileButton.setObjectName("SelectFileButton")
        self.DeleteButton = QtWidgets.QPushButton(self.centralwidget)
        self.DeleteButton.setGeometry(QtCore.QRect(0, 260, 411, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.DeleteButton.setFont(font)
        self.DeleteButton.setObjectName("DeleteButton")
        self.AddButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddButton.setGeometry(QtCore.QRect(0, 220, 411, 41))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.AddButton.setFont(font)
        self.AddButton.setObjectName("AddButton")
        self.TextInput = QtWidgets.QTextEdit(self.centralwidget)
        self.TextInput.setGeometry(QtCore.QRect(0, 190, 411, 31))
        self.TextInput.setObjectName("TextInput")
        self.RUNButton = QtWidgets.QPushButton(self.centralwidget)
        self.RUNButton.setGeometry(QtCore.QRect(0, 300, 411, 51))
        font = QtGui.QFont()
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.RUNButton.setFont(font)
        self.RUNButton.setObjectName("RUNButton")
        self.PathInput = QtWidgets.QTextEdit(self.centralwidget)
        self.PathInput.setGeometry(QtCore.QRect(100, 0, 311, 31))
        self.PathInput.setObjectName("PathInput")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(0, 30, 411, 161))
        self.listWidget.setObjectName("listWidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        
        self.statusbarLabel=QtWidgets.QLabel('')
        self.statusBar.addWidget(self.statusbarLabel)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.DB = 'dataBase.json'
        self.file = FM.openFile(self.DB)
        self.init()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.SelectFileButton.setText(_translate("MainWindow", "File Path:"))
        self.DeleteButton.setText(_translate("MainWindow", "Delete"))
        self.AddButton.setText(_translate("MainWindow", "Add"))
        self.RUNButton.setText(_translate("MainWindow", "Run"))

    # My Methods

    def init(self):
        for i in self.file["data"]:
            self.listWidget.addItem(i)
        self.AddButton.clicked.connect(lambda: self.addButtonFunction())
        self.DeleteButton.clicked.connect(lambda: self.deleteButtonFunction())
        self.RUNButton.clicked.connect(lambda: self.runButtonFunction())
        self.SelectFileButton.clicked.connect(self.getfiles)

    def runButtonFunction(self):
        Filepath = self.PathInput.toPlainText().strip()
        if not os.path.isfile(Filepath):
            self.statusbarLabel.setText("File dose not exist")
            return
        CM.replacTarget('Label', Filepath)
        CM.deleteTarget(self.file["data"], Filepath)
        self.statusbarLabel.setText("Done")

    def addButtonFunction(self):
        text = self.TextInput.toPlainText().strip().lower()
        if(len(text) > 0 and text not in self.file['data']):
            self.listWidget.addItem(text)
            self.file["data"].append(text)
            FM.saveFile(self.DB, self.file)
        self.TextInput.setText('')

    def deleteButtonFunction(self):
        row = self.listWidget.currentRow()
        if(row != -1):
            self.listWidget.takeItem(self.listWidget.currentRow())
            del self.file["data"][row]
            FM.saveFile(self.DB, self.file)

    def setPath(self, fileName):
        self.PathInput.setText(fileName)
        self.FileName = fileName

    def getfiles(self):
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(
            self, 'Single File', QtCore.QDir.rootPath(), '*.csv')
        self.setPath(fileName)

    def dragEnterEvent(self, event):
        event.accept()

    def dragMoveEvent(self, event):
        event.accept()

    def dropEvent(self, event):
        event.setDropAction(QtCore.Qt.CopyAction)
        fileName = event.mimeData().urls()[0].toLocalFile()
        self.setPath(fileName)
